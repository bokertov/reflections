Q: What happens when you initialize a repository? Why do you need to do it?
A: A ".git" directory will be created which contains version information.
We need to do this, so that it no longer only contains current files but
different versions of the files as well.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
A: Staging area can contain files from different working directories.
It prepares for a commit.

Q: How can you use the staging area to make sure you have one commit per logical change?
A: Can edit multiple files at the same time, but only do "git add" etc. for files that belong to the same logical change.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: For example, different team members might be working on different feature of the project at the same time. Branching enables such collaboration. 

Q: How do the diagrams help you visualize the branch structure?
A: Drawing the tree-structure diagrams helps me see the branching point, different commit points etc.

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A: The result of merging is that changes from both branches are merged together. That's why it's a converged node in the diagram.

Q: What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
A: Git's auto merging saves us from trivial merge. However, it still let us
decide maually on non-trivial merge.
